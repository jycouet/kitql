/**
 * This file was generated by 'vite-plugin-kit-routes'
 *
 *      >> DO NOT EDIT THIS FILE MANUALLY <<
 */

export const PAGES = {
  _ROOT: `/`,
  subGroup: `/subGroup`,
  subGroup2: (params: { first: string | number }) => {
    return `/subGroup2${appendSp({ first: params?.first })}`
  },
  lang_contract: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/contract`
  },
  lang_contract_id: (params: {
    id: string | number
    lang?: 'fr' | 'en' | 'hu' | 'at' | string
  }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/contract/${params.id}`
  },
  lang_gp_one: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/gp/one`
  },
  lang_gp_two: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/gp/two`
  },
  lang_main: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/main`
  },
  lang_match_id_int: (params: {
    id: string | number
    lang?: 'fr' | 'en' | 'hu' | 'at' | string
  }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/match/${params.id}`
  },
  lang_site: (
    params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string; limit?: number },
    sp?: Record<string, string | number>,
  ) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/site${appendSp({
      limit: params?.limit,
      ...sp,
    })}`
  },
  lang_site_id: (params?: {
    lang?: 'fr' | 'hu' | undefined
    id?: string
    limit?: number
    demo?: string
  }) => {
    params = params ?? {}
    params.lang = params.lang ?? 'fr'
    params.id = params.id ?? 'Vienna'
    return `${params?.lang ? `/${params?.lang}` : ''}/site/${params.id}${appendSp({
      limit: params?.limit,
      demo: params?.demo,
    })}`
  },
  lang_site_contract_siteId_contractId: (params: {
    siteId: string | number
    contractId: string | number
    lang?: 'fr' | 'en' | 'hu' | 'at' | string
    limit?: number
  }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/site_contract/${params.siteId}-${
      params.contractId
    }${appendSp({ limit: params?.limit })}`
  },
  a_rest_z: (params: { rest: (string | number)[] }) => {
    return `/a/${params.rest?.join('/')}/z`
  },
  lay_normal: `/lay/normal`,
  lay_root_layout: `/lay/root-layout`,
  lay_skip: `/lay/skip`,
}

export const SERVERS = {
  GET_lang_contract: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/contract`
  },
  POST_lang_contract: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/contract`
  },
  GET_lang_site: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/site`
  },
  GET_api_graphql: `/api/graphql`,
  POST_api_graphql: `/api/graphql`,
}

export const ACTIONS = {
  default_lang_contract_id: (params: {
    id: string | number
    lang?: 'fr' | 'en' | 'hu' | 'at' | string
    limit?: number
  }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/contract/${params.id}${appendSp({
      limit: params?.limit,
    })}`
  },
  action1_lang_site: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/site?/action1`
  },
  action2_lang_site: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/site?/action2`
  },
  noSatisfies_lang_site_contract: (params?: { lang?: 'fr' | 'en' | 'hu' | 'at' | string }) => {
    return `${params?.lang ? `/${params?.lang}` : ''}/site_contract?/noSatisfies`
  },
  sendSomething_lang_site_contract_siteId_contractId: (params: {
    siteId: string | number
    contractId: string | number
    lang?: 'fr' | 'en' | 'hu' | 'at' | string
    extra?: 'A' | 'B'
  }) => {
    params.extra = params.extra ?? 'A'
    return `${params?.lang ? `/${params?.lang}` : ''}/site_contract/${params.siteId}-${
      params.contractId
    }?/sendSomething${appendSp({ extra: params?.extra }, '&')}`
  },
}

export const LINKS = {
  twitter: `https:/twitter.com/jycouet`,
  twitter_post: (params: { name: string | number; id: string | number }) => {
    return `https:/twitter.com/${params.name}/status/${params.id}`
  },
  gravatar: (params: { str: string; s?: number; d?: 'retro' | 'identicon' }) => {
    params.s = params.s ?? 75
    params.d = params.d ?? 'identicon'
    return `https:/www.gravatar.com/avatar/${params.str}${appendSp({ s: params?.s, d: params?.d })}`
  },
}

const appendSp = (sp?: Record<string, string | number | undefined>, prefix: '?' | '&' = '?') => {
  if (sp === undefined) return ''
  const mapping = Object.entries(sp)
    .filter(c => c[1] !== undefined)
    .map(c => [c[0], String(c[1])])

  const formated = new URLSearchParams(mapping).toString()
  if (formated) {
    return `${prefix}${formated}`
  }
  return ''
}
/**
 * Add this type as a generic of the vite plugin `kitRoutes<KIT_ROUTES>`.
 *
 * Full example:
 * ```ts
 * import type { KIT_ROUTES } from '$lib/ROUTES'
 * import { kitRoutes } from 'vite-plugin-kit-routes'
 *
 * kitRoutes<KIT_ROUTES>({
 *  PAGES: {
 *    // here, key of object will be typed!
 *  }
 * })
 * ```
 */
export type KIT_ROUTES = {
  PAGES: {
    _ROOT: never
    subGroup: never
    subGroup2: never
    lang_contract: 'lang'
    lang_contract_id: 'id' | 'lang'
    lang_gp_one: 'lang'
    lang_gp_two: 'lang'
    lang_main: 'lang'
    lang_match_id_int: 'id' | 'lang'
    lang_site: 'lang'
    lang_site_id: 'lang' | 'id'
    lang_site_contract_siteId_contractId: 'siteId' | 'contractId' | 'lang'
    a_rest_z: 'rest'
    lay_normal: never
    lay_root_layout: never
    lay_skip: never
  }
  SERVERS: {
    GET_lang_contract: 'lang'
    POST_lang_contract: 'lang'
    GET_lang_site: 'lang'
    GET_api_graphql: never
    POST_api_graphql: never
  }
  ACTIONS: {
    default_lang_contract_id: 'id' | 'lang'
    action1_lang_site: 'lang'
    action2_lang_site: 'lang'
    noSatisfies_lang_site_contract: 'lang'
    sendSomething_lang_site_contract_siteId_contractId: 'siteId' | 'contractId' | 'lang'
  }
  LINKS: { twitter: never; twitter_post: 'name' | 'id'; gravatar: 'str' }
  Params: {
    first: never
    lang: never
    id: never
    limit: never
    demo: never
    siteId: never
    contractId: never
    rest: never
    extra: never
    name: never
    str: never
    s: never
    d: never
  }
}
